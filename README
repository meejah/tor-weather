--------------------------------------------------------------------------------
HACKING on Tor weather:

A brief history of this codebase: during 2014's GSoC, the existing
Tor-weather code was (partially) re-written by a student (XXX); XXX
added unit-tests; baunmanno provided OnionPy (for the OnionOO
interface) which was copied internally, for various reasons. meejah
then fixed some loose ends, did some cleanup + documentation and karsten
will deploy it.

The point of that is that there ARE still dark corners, un-factored
bits and so on -- if something looks wrong or weird, it probably is,
and pull-requests are gladly accepted.

"vagrant up"
should provide you with a dev environment; see Vagrant.md for more details
(like what to add to /etc/hosts or DNS)

"vagrant ssh" will give you a shell in the dev environment.

FIXME/TODO:

  . can we be more lazy? i.e. instead of rundaily, just do queries to OnionOO one relay at a time?

  . failing unit-test from django.contrib.auth -- not sure how/why
    these are even running...? but yeah. many stackoverflow things but
    haven't found an answer

    should answer this if I do find solution:
    http://stackoverflow.com/questions/23304575/django-contrib-auth-test-failing-while-upgrading-django-from-1-4-to-1-5

  . What are the magic incantations to get the database "alive"? (have
    to run the daily etc. scripts in some order, I recall).

  . need to disable default site

  . should probably make the "Dev" cert a CA-which-signs-a-cert
    instead of just a straight CA cert (apache warns, but still uses it).

  . can/should we deploy behind nginx instead? (ask karsten?)
--------------------------------------------------------------------------------
ORIGINAL README:

There should only be one running instance of this application. Please do not run it if you are not a Tor developer.

This version of Tor Weather runs on Django version 1.2. It is incompatible with
earlier versions of Django. If you are running Django v1.1, please download the
v1.1-compatible version of this package.
--------------------------------------------------------------------------------
INSTALLATION:
See /doc/INSTALL for details.

------------------------------------------------------------------------------
API:
To generate the Tor Weather API, install epydoc (http://epydoc.sourceforge.net/installing.html) and run the following command within weather: 

	$ epydoc . --config config/epydoc_config.py

Ignore the warnings; they should all pertain to Django-related documentation.
The HTML-formatted API will be in a directory named api/ in weather.

------------------------------------------------------------------------------
DESIGN DOCUMENTATION:
To generate HTML-formatted design documentation, run the following command from 
within doc/:

	$ rst2html --title="Tor Weather Design Documentation" design.txt design.html

To view the documentation, open doc/design.html. If you'd like to view the plaintext design doc instead, see doc/design.txt

-------------------------------------------------------------------------------
TESTING: (For developers)
Run the following command from within weather/:

	$ python manage.py test weatherapp

-------------------------------------------------------------------------------
